function _classPrivateFieldLooseBase(e,t){if(!Object.prototype.hasOwnProperty.call(e,t))throw new TypeError("attempted to use private field on non-instance");return e}var id=0;function _classPrivateFieldLooseKey(e){return"__private_"+id+++"_"+e}!async function(e,t){"use strict";t.exports&&t.exports!==globalThis&&Object.defineProperty(t.exports,"__esModule",{value:!0}),e.templates||(e.templates={});var o=sf.dom||sf.$,s=e.templates;e._sf_internal=e._sf_internal||{body_map:{},_replace(e,t){let s=o(t);return this.body_map[e]&&this.body_map[e].remove(),this.reinitViews&&this.reinitViews(s),this.body_map[e]=s},append(e,t){o(document.body).append(this._replace.apply(this,arguments))},prepend(e,t){o(document.body).prepend(this._replace.apply(this,arguments))}};let a=e.Blackprint.loadScope({url:import.meta.url});sf.$,await a.getContext("Discord");s["BPIC/Discord/Event/Interaction/Create.sf"]='<div class="node {{type}}" style="transform: translate({{x}}px, {{y}}px)"><sf-template path="Blackprint/nodes/template/routes.sf"></sf-template><sf-template path="Blackprint/nodes/template/header.sf"></sf-template><div class="content"><select value="{{data.type}}" type="number"><option value="0" selected="selected">Any Interaction</option><option value="1">Is Button</option><option value="2">Is Autocomplete</option><option value="3">Is ChatInputCommand</option><option value="4">Is Command</option><option value="5">Is ContextMenuCommand</option><option value="6">Is MessageComponent</option><option value="7">Is MessageContextMenuCommand</option><option value="8">Is ModalSubmit</option><option value="9">Is SelectMenu</option><option value="10">Is UserContextMenuCommand</option></select><div class="left-port"><sf-template path="Blackprint/nodes/template/input-port.sf"></sf-template></div><div class="right-port"><sf-template path="Blackprint/nodes/template/output-port.sf"></sf-template></div></div><sf-template path="Blackprint/nodes/template/other.sf"></sf-template></div>',a.Sketch.registerInterface("BPIC/Discord/Event/Interaction/Create",class extends a.Interface{constructor(e){super(e),this.data=new p(this)}});var n=_classPrivateFieldLooseKey("iface");class p{constructor(e){Object.defineProperty(this,n,{writable:!0,value:null}),this._type=0,_classPrivateFieldLooseBase(this,n)[n]=e}get type(){return this._type}set type(e){this._type=e,_classPrivateFieldLooseBase(this,n)[n].node.syncOut("type",e)}}}("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:this,"undefined"!=typeof module?module:{exports:this});
//# sourceMappingURL=nodes-discord.sf.mjs.map